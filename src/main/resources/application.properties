spring.application.name=book-demo

# MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/book?useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root

# Spring Data JPA
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# JWT Token
jwt.secret.key=FRaNlJmM1RzRlNhYl123FRaNlJmM1RzRlNhYl123898
jwt.token-expiration-seconds=3600
# 是否啟用 JWToken
jwt.auth.enabled=false


#spring.sql.init.schema-locations=classpath:/sql/schema.sql
#spring.sql.init.data-locations=classpath:/sql/data.sql


spring.sql.init.mode=always
spring.sql.init.continue-on-error = true
 
spring.jpa.defer-datasource-initialization=true
#命名規則
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.main.allow-bean-definition-overriding=true


# kafka
# 告訴應用程式應該連接到哪一個或哪幾個 Kafka broker 來發送和接收消息
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.bootstrap-servers=kafka1:9092,kafka2:9093,kafka3:9094
#spring.kafka.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
#spring.kafka.template.default-topic=topic.test1


## Producer 配置
# 發生錯誤，重送次數
spring.kafka.producer.retries=5 
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=1
# Spring Boot 中專門為 Kafka 生產者（Producer）配置 Kafka broker 的屬性。
#spring.kafka.producer.bootstrap-servers=localhost:29092


## Consumer 配置
spring.kafka.consumer.auto-commit-interval=1S
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=test
# Spring Boot 中專門為 Kafka 消費者（Consumer）配置 Kafka broker 的屬性。
#spring.kafka.consumer.bootstrap-servers=localhost:29092


## Listener 配置
spring.kafka.listener.concurrency=5
spring.kafka.listener.ack-mode=manual-immediate
spring.kafka.listener.missing-topics-fatal=false

## ZooKeeper
zookeeper.address=localhost:2181
zookeeper.timeout=4000

## Event Store DB
# 用於連接 EventStoreDB 的連接字符串，這裡假設使用的是本地 EventStoreDB，且禁用了 TLS。
eventstoredb.connection-string=esdb://localhost:2113?tls=false
eventstoredb.username=admin
eventstoredb.password=changeit
## 可以根據應用程序的需求設置事件流前綴，以便在每次創建事件流時統一命名
#eventstoredb.stream-prefix=my-app-stream-



## 自定義的 Kafka 配置項
kafka.book.topic.name=topic.book
kafka.book.group.id=group.book


kafka.book-replay.group.id=group.replay-book
#spring.kafka.topic.name=TEST_TOPIC
#spring.kafka.group.id=TEST_GROUP
